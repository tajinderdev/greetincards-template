{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\vetra\\\\public\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\vetra\\\\public\",\"filename\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\vetra\\\\public\\\\gulpfile.babel.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\vetra\\\\public\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.14": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\wamp64\\www\\themeforest\\vetra\\public\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\wamp64\\www\\themeforest\\vetra\\public",
      "filename": "C:\\wamp64\\www\\themeforest\\vetra\\public\\gulpfile.babel.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\wamp64\\www\\themeforest\\vetra\\public",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\wamp64\\www\\themeforest\\vetra\\public\\gulpfile.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\wamp64\\www\\themeforest\\vetra\\public\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\wamp64\\www\\themeforest\\vetra\\public\\",
        "sourceFileName": "gulpfile.babel.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _require = require(\"gulp\"),\n    src = _require.src,\n    dest = _require.dest,\n    series = _require.series,\n    parallel = _require.parallel,\n    watch = _require.watch;\n\nvar babel = require('gulp-babel');\n\nvar sass = require(\"gulp-sass\");\n\nvar postcss = require(\"gulp-postcss\");\n\nvar autoprefixer = require(\"autoprefixer\");\n\nvar cssnano = require(\"cssnano\");\n\nvar concat = require(\"gulp-concat\");\n\nvar uglify = require(\"gulp-uglify\");\n\nvar rename = require('gulp-rename');\n\nvar src_paths = {\n  scss: \"src/scss/**/*.scss\",\n  js: \"src/js/**/*.js\"\n};\nvar dist_paths = {\n  css: \"dist/css\",\n  js: \"dist/js\"\n};\n/*\nfunction scssTask() {\n    return src(src_paths.scss)\n        .pipe(sourcemaps.init())\n        .pipe(sass())\n        .pipe(concat('app.css'))\n        .pipe(rename({suffix: '.min'}))\n        .pipe(postcss([autoprefixer(), cssnano()]))\n        .pipe(sourcemaps.write('.'))\n        .pipe(dest(dist_paths.css))\n}\n */\n\nfunction scssTask() {\n  return src(src_paths.scss).pipe(sass()).pipe(dest(dist_paths.css)).pipe(postcss([autoprefixer('last 2 versions'), cssnano()])).pipe(rename({\n    suffix: '.min'\n  })).pipe(dest(dist_paths.css));\n}\n\nfunction jsTask() {\n  return src(src_paths.js).pipe(babel({\n    presets: ['@babel/env']\n  })).pipe(dest(dist_paths.js)).pipe(uglify()).pipe(rename({\n    suffix: '.min'\n  })).pipe(dest(dist_paths.js));\n}\n\nfunction watchTask() {\n  watch([src_paths.scss, src_paths.js], parallel(scssTask, jsTask));\n}\n\nexports[\"default\"] = series(parallel(scssTask, jsTask), watchTask);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJzcmMiLCJkZXN0Iiwic2VyaWVzIiwicGFyYWxsZWwiLCJ3YXRjaCIsImJhYmVsIiwic2FzcyIsInBvc3Rjc3MiLCJhdXRvcHJlZml4ZXIiLCJjc3NuYW5vIiwiY29uY2F0IiwidWdsaWZ5IiwicmVuYW1lIiwic3JjX3BhdGhzIiwic2NzcyIsImpzIiwiZGlzdF9wYXRocyIsImNzcyIsInNjc3NUYXNrIiwicGlwZSIsInN1ZmZpeCIsImpzVGFzayIsInByZXNldHMiLCJ3YXRjaFRhc2siLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztlQUE2Q0EsT0FBTyxDQUFDLE1BQUQsQztJQUE3Q0MsRyxZQUFBQSxHO0lBQUtDLEksWUFBQUEsSTtJQUFNQyxNLFlBQUFBLE07SUFBUUMsUSxZQUFBQSxRO0lBQVVDLEssWUFBQUEsSzs7QUFDcEMsSUFBTUMsS0FBSyxHQUFHTixPQUFPLENBQUMsWUFBRCxDQUFyQjs7QUFDQSxJQUFNTyxJQUFJLEdBQUdQLE9BQU8sQ0FBQyxXQUFELENBQXBCOztBQUNBLElBQU1RLE9BQU8sR0FBR1IsT0FBTyxDQUFDLGNBQUQsQ0FBdkI7O0FBQ0EsSUFBTVMsWUFBWSxHQUFHVCxPQUFPLENBQUMsY0FBRCxDQUE1Qjs7QUFDQSxJQUFNVSxPQUFPLEdBQUdWLE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1XLE1BQU0sR0FBR1gsT0FBTyxDQUFDLGFBQUQsQ0FBdEI7O0FBQ0EsSUFBTVksTUFBTSxHQUFHWixPQUFPLENBQUMsYUFBRCxDQUF0Qjs7QUFDQSxJQUFNYSxNQUFNLEdBQUdiLE9BQU8sQ0FBQyxhQUFELENBQXRCOztBQUVBLElBQU1jLFNBQVMsR0FBRztBQUNkQyxFQUFBQSxJQUFJLEVBQUUsb0JBRFE7QUFFZEMsRUFBQUEsRUFBRSxFQUFFO0FBRlUsQ0FBbEI7QUFLQSxJQUFNQyxVQUFVLEdBQUc7QUFDZkMsRUFBQUEsR0FBRyxFQUFFLFVBRFU7QUFFZkYsRUFBQUEsRUFBRSxFQUFFO0FBRlcsQ0FBbkI7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0csUUFBVCxHQUFvQjtBQUNoQixTQUFPbEIsR0FBRyxDQUFDYSxTQUFTLENBQUNDLElBQVgsQ0FBSCxDQUNGSyxJQURFLENBQ0diLElBQUksRUFEUCxFQUVGYSxJQUZFLENBRUdsQixJQUFJLENBQUNlLFVBQVUsQ0FBQ0MsR0FBWixDQUZQLEVBR0ZFLElBSEUsQ0FHR1osT0FBTyxDQUFDLENBQUNDLFlBQVksQ0FBQyxpQkFBRCxDQUFiLEVBQWtDQyxPQUFPLEVBQXpDLENBQUQsQ0FIVixFQUlGVSxJQUpFLENBSUdQLE1BQU0sQ0FBQztBQUFFUSxJQUFBQSxNQUFNLEVBQUU7QUFBVixHQUFELENBSlQsRUFLRkQsSUFMRSxDQUtHbEIsSUFBSSxDQUFDZSxVQUFVLENBQUNDLEdBQVosQ0FMUCxDQUFQO0FBTUg7O0FBRUQsU0FBU0ksTUFBVCxHQUFrQjtBQUNkLFNBQU9yQixHQUFHLENBQUNhLFNBQVMsQ0FBQ0UsRUFBWCxDQUFILENBQ0ZJLElBREUsQ0FDR2QsS0FBSyxDQUFDO0FBQ1JpQixJQUFBQSxPQUFPLEVBQUUsQ0FBQyxZQUFEO0FBREQsR0FBRCxDQURSLEVBSUZILElBSkUsQ0FJR2xCLElBQUksQ0FBQ2UsVUFBVSxDQUFDRCxFQUFaLENBSlAsRUFLRkksSUFMRSxDQUtHUixNQUFNLEVBTFQsRUFNRlEsSUFORSxDQU1HUCxNQUFNLENBQUM7QUFBQ1EsSUFBQUEsTUFBTSxFQUFFO0FBQVQsR0FBRCxDQU5ULEVBT0ZELElBUEUsQ0FPR2xCLElBQUksQ0FBQ2UsVUFBVSxDQUFDRCxFQUFaLENBUFAsQ0FBUDtBQVFIOztBQUVELFNBQVNRLFNBQVQsR0FBcUI7QUFDakJuQixFQUFBQSxLQUFLLENBQ0QsQ0FBQ1MsU0FBUyxDQUFDQyxJQUFYLEVBQWlCRCxTQUFTLENBQUNFLEVBQTNCLENBREMsRUFFRFosUUFBUSxDQUFDZSxRQUFELEVBQVdHLE1BQVgsQ0FGUCxDQUFMO0FBSUg7O0FBRURHLE9BQU8sV0FBUCxHQUFrQnRCLE1BQU0sQ0FDcEJDLFFBQVEsQ0FBQ2UsUUFBRCxFQUFXRyxNQUFYLENBRFksRUFFcEJFLFNBRm9CLENBQXhCIiwic291cmNlUm9vdCI6IkM6XFx3YW1wNjRcXHd3d1xcdGhlbWVmb3Jlc3RcXHZldHJhXFxwdWJsaWNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtzcmMsIGRlc3QsIHNlcmllcywgcGFyYWxsZWwsIHdhdGNofSA9IHJlcXVpcmUoXCJndWxwXCIpO1xuY29uc3QgYmFiZWwgPSByZXF1aXJlKCdndWxwLWJhYmVsJyk7XG5jb25zdCBzYXNzID0gcmVxdWlyZShcImd1bHAtc2Fzc1wiKTtcbmNvbnN0IHBvc3Rjc3MgPSByZXF1aXJlKFwiZ3VscC1wb3N0Y3NzXCIpO1xuY29uc3QgYXV0b3ByZWZpeGVyID0gcmVxdWlyZShcImF1dG9wcmVmaXhlclwiKTtcbmNvbnN0IGNzc25hbm8gPSByZXF1aXJlKFwiY3NzbmFub1wiKTtcbmNvbnN0IGNvbmNhdCA9IHJlcXVpcmUoXCJndWxwLWNvbmNhdFwiKTtcbmNvbnN0IHVnbGlmeSA9IHJlcXVpcmUoXCJndWxwLXVnbGlmeVwiKTtcbmNvbnN0IHJlbmFtZSA9IHJlcXVpcmUoJ2d1bHAtcmVuYW1lJyk7XG5cbmNvbnN0IHNyY19wYXRocyA9IHtcbiAgICBzY3NzOiBcInNyYy9zY3NzLyoqLyouc2Nzc1wiLFxuICAgIGpzOiBcInNyYy9qcy8qKi8qLmpzXCIsXG59O1xuXG5jb25zdCBkaXN0X3BhdGhzID0ge1xuICAgIGNzczogXCJkaXN0L2Nzc1wiLFxuICAgIGpzOiBcImRpc3QvanNcIixcbn07XG5cbi8qXG5mdW5jdGlvbiBzY3NzVGFzaygpIHtcbiAgICByZXR1cm4gc3JjKHNyY19wYXRocy5zY3NzKVxuICAgICAgICAucGlwZShzb3VyY2VtYXBzLmluaXQoKSlcbiAgICAgICAgLnBpcGUoc2FzcygpKVxuICAgICAgICAucGlwZShjb25jYXQoJ2FwcC5jc3MnKSlcbiAgICAgICAgLnBpcGUocmVuYW1lKHtzdWZmaXg6ICcubWluJ30pKVxuICAgICAgICAucGlwZShwb3N0Y3NzKFthdXRvcHJlZml4ZXIoKSwgY3NzbmFubygpXSkpXG4gICAgICAgIC5waXBlKHNvdXJjZW1hcHMud3JpdGUoJy4nKSlcbiAgICAgICAgLnBpcGUoZGVzdChkaXN0X3BhdGhzLmNzcykpXG59XG4gKi9cblxuZnVuY3Rpb24gc2Nzc1Rhc2soKSB7XG4gICAgcmV0dXJuIHNyYyhzcmNfcGF0aHMuc2NzcylcbiAgICAgICAgLnBpcGUoc2FzcygpKVxuICAgICAgICAucGlwZShkZXN0KGRpc3RfcGF0aHMuY3NzKSlcbiAgICAgICAgLnBpcGUocG9zdGNzcyhbYXV0b3ByZWZpeGVyKCdsYXN0IDIgdmVyc2lvbnMnKSwgY3NzbmFubygpXSkpXG4gICAgICAgIC5waXBlKHJlbmFtZSh7IHN1ZmZpeDogJy5taW4nIH0pKVxuICAgICAgICAucGlwZShkZXN0KGRpc3RfcGF0aHMuY3NzKSlcbn1cblxuZnVuY3Rpb24ganNUYXNrKCkge1xuICAgIHJldHVybiBzcmMoc3JjX3BhdGhzLmpzKVxuICAgICAgICAucGlwZShiYWJlbCh7XG4gICAgICAgICAgICBwcmVzZXRzOiBbJ0BiYWJlbC9lbnYnXVxuICAgICAgICB9KSlcbiAgICAgICAgLnBpcGUoZGVzdChkaXN0X3BhdGhzLmpzKSlcbiAgICAgICAgLnBpcGUodWdsaWZ5KCkpXG4gICAgICAgIC5waXBlKHJlbmFtZSh7c3VmZml4OiAnLm1pbid9KSlcbiAgICAgICAgLnBpcGUoZGVzdChkaXN0X3BhdGhzLmpzKSlcbn1cblxuZnVuY3Rpb24gd2F0Y2hUYXNrKCkge1xuICAgIHdhdGNoKFxuICAgICAgICBbc3JjX3BhdGhzLnNjc3MsIHNyY19wYXRocy5qc10sXG4gICAgICAgIHBhcmFsbGVsKHNjc3NUYXNrLCBqc1Rhc2spXG4gICAgKTtcbn1cblxuZXhwb3J0cy5kZWZhdWx0ID0gc2VyaWVzKFxuICAgIHBhcmFsbGVsKHNjc3NUYXNrLCBqc1Rhc2spLFxuICAgIHdhdGNoVGFza1xuKTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "require",
        "src",
        "dest",
        "series",
        "parallel",
        "watch",
        "babel",
        "sass",
        "postcss",
        "autoprefixer",
        "cssnano",
        "concat",
        "uglify",
        "rename",
        "src_paths",
        "scss",
        "js",
        "dist_paths",
        "css",
        "scssTask",
        "pipe",
        "suffix",
        "jsTask",
        "presets",
        "watchTask",
        "exports"
      ],
      "mappings": ";;eAA6CA,OAAO,CAAC,MAAD,C;IAA7CC,G,YAAAA,G;IAAKC,I,YAAAA,I;IAAMC,M,YAAAA,M;IAAQC,Q,YAAAA,Q;IAAUC,K,YAAAA,K;;AACpC,IAAMC,KAAK,GAAGN,OAAO,CAAC,YAAD,CAArB;;AACA,IAAMO,IAAI,GAAGP,OAAO,CAAC,WAAD,CAApB;;AACA,IAAMQ,OAAO,GAAGR,OAAO,CAAC,cAAD,CAAvB;;AACA,IAAMS,YAAY,GAAGT,OAAO,CAAC,cAAD,CAA5B;;AACA,IAAMU,OAAO,GAAGV,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMW,MAAM,GAAGX,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAMY,MAAM,GAAGZ,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAMa,MAAM,GAAGb,OAAO,CAAC,aAAD,CAAtB;;AAEA,IAAMc,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,oBADQ;AAEdC,EAAAA,EAAE,EAAE;AAFU,CAAlB;AAKA,IAAMC,UAAU,GAAG;AACfC,EAAAA,GAAG,EAAE,UADU;AAEfF,EAAAA,EAAE,EAAE;AAFW,CAAnB;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,QAAT,GAAoB;AAChB,SAAOlB,GAAG,CAACa,SAAS,CAACC,IAAX,CAAH,CACFK,IADE,CACGb,IAAI,EADP,EAEFa,IAFE,CAEGlB,IAAI,CAACe,UAAU,CAACC,GAAZ,CAFP,EAGFE,IAHE,CAGGZ,OAAO,CAAC,CAACC,YAAY,CAAC,iBAAD,CAAb,EAAkCC,OAAO,EAAzC,CAAD,CAHV,EAIFU,IAJE,CAIGP,MAAM,CAAC;AAAEQ,IAAAA,MAAM,EAAE;AAAV,GAAD,CAJT,EAKFD,IALE,CAKGlB,IAAI,CAACe,UAAU,CAACC,GAAZ,CALP,CAAP;AAMH;;AAED,SAASI,MAAT,GAAkB;AACd,SAAOrB,GAAG,CAACa,SAAS,CAACE,EAAX,CAAH,CACFI,IADE,CACGd,KAAK,CAAC;AACRiB,IAAAA,OAAO,EAAE,CAAC,YAAD;AADD,GAAD,CADR,EAIFH,IAJE,CAIGlB,IAAI,CAACe,UAAU,CAACD,EAAZ,CAJP,EAKFI,IALE,CAKGR,MAAM,EALT,EAMFQ,IANE,CAMGP,MAAM,CAAC;AAACQ,IAAAA,MAAM,EAAE;AAAT,GAAD,CANT,EAOFD,IAPE,CAOGlB,IAAI,CAACe,UAAU,CAACD,EAAZ,CAPP,CAAP;AAQH;;AAED,SAASQ,SAAT,GAAqB;AACjBnB,EAAAA,KAAK,CACD,CAACS,SAAS,CAACC,IAAX,EAAiBD,SAAS,CAACE,EAA3B,CADC,EAEDZ,QAAQ,CAACe,QAAD,EAAWG,MAAX,CAFP,CAAL;AAIH;;AAEDG,OAAO,WAAP,GAAkBtB,MAAM,CACpBC,QAAQ,CAACe,QAAD,EAAWG,MAAX,CADY,EAEpBE,SAFoB,CAAxB",
      "sourceRoot": "C:\\wamp64\\www\\themeforest\\vetra\\public\\",
      "sourcesContent": [
        "const {src, dest, series, parallel, watch} = require(\"gulp\");\nconst babel = require('gulp-babel');\nconst sass = require(\"gulp-sass\");\nconst postcss = require(\"gulp-postcss\");\nconst autoprefixer = require(\"autoprefixer\");\nconst cssnano = require(\"cssnano\");\nconst concat = require(\"gulp-concat\");\nconst uglify = require(\"gulp-uglify\");\nconst rename = require('gulp-rename');\n\nconst src_paths = {\n    scss: \"src/scss/**/*.scss\",\n    js: \"src/js/**/*.js\",\n};\n\nconst dist_paths = {\n    css: \"dist/css\",\n    js: \"dist/js\",\n};\n\n/*\nfunction scssTask() {\n    return src(src_paths.scss)\n        .pipe(sourcemaps.init())\n        .pipe(sass())\n        .pipe(concat('app.css'))\n        .pipe(rename({suffix: '.min'}))\n        .pipe(postcss([autoprefixer(), cssnano()]))\n        .pipe(sourcemaps.write('.'))\n        .pipe(dest(dist_paths.css))\n}\n */\n\nfunction scssTask() {\n    return src(src_paths.scss)\n        .pipe(sass())\n        .pipe(dest(dist_paths.css))\n        .pipe(postcss([autoprefixer('last 2 versions'), cssnano()]))\n        .pipe(rename({ suffix: '.min' }))\n        .pipe(dest(dist_paths.css))\n}\n\nfunction jsTask() {\n    return src(src_paths.js)\n        .pipe(babel({\n            presets: ['@babel/env']\n        }))\n        .pipe(dest(dist_paths.js))\n        .pipe(uglify())\n        .pipe(rename({suffix: '.min'}))\n        .pipe(dest(dist_paths.js))\n}\n\nfunction watchTask() {\n    watch(\n        [src_paths.scss, src_paths.js],\n        parallel(scssTask, jsTask)\n    );\n}\n\nexports.default = series(\n    parallel(scssTask, jsTask),\n    watchTask\n);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1617205155495
  }
}